// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: proto/example.proto
package example

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
)

type ExampleService interface {
	Method1(context.Context, *Method1Request) (*Method1Response, error)
}

func RegisterExampleService(srv *ttrpc.Server, svc ExampleService) {
	srv.RegisterService("proto.Example", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"Method1": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req Method1Request
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.Method1(ctx, &req)
			},
		},
	})
}

type exampleClient struct {
	client *ttrpc.Client
}

func NewExampleClient(client *ttrpc.Client) ExampleService {
	return &exampleClient{
		client: client,
	}
}

func (c *exampleClient) Method1(ctx context.Context, req *Method1Request) (*Method1Response, error) {
	var resp Method1Response
	if err := c.client.Call(ctx, "proto.Example", "Method1", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
